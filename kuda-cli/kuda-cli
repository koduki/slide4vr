#!/bin/bash

#
# Load config
#
[[ -z "${API_URL}" ]] && API_URL=$(cat ${HOME}/.kuda_config|grep URL:|awk '{print $2}')

#
# Define variable
#
CURL_OPTIONS=""

OPTIONS=($(echo $@ | ruby -ne 'puts $_.split(" ").find_all{|s| s[0]=="-"}.join(" ")'))
ARGS=($(echo $@    | ruby -ne 'puts $_.split(" ").find_all{|s| s[0]!="-"}.join(" ")'))

#
# Usage
#
function usage {
  cat <<EOM
Usage: $(basename "$0") [optional flags] [command] args

GLOBAL FLAGS
    -h|--help                              Display help
    -v|--verbose                           Make the operation more talkative        

COMMANDS
    deploy {FLOW_FILE}                     Deploy flow
    flows                                  Show flows
    triggers {FLOW_NAME} {ENDPOINT_NAME}   Show triggers
EOM

  exit 2
}
if [ "$1" = "" ];then
    usage
fi

#
# Options
#
for opt in ${OPTIONS[@]}; do
    case "$opt" in
        '-v'|'--verbose' ) CURL_OPTIONS=" -v "$CURL_OPTIONS ;;
        '-h'|'--help' ) usage ;;
    esac
done

#
# Commands
#
SUBCMD=${ARGS[0]}
case "${SUBCMD}" in
    "deploy" ) 
        FLOW_FILE=${ARGS[1]}
        gsutil cp $FLOW_FILE gs://slide4vr-kuda-flow
        curl ${CURL_OPTIONS} -X POST ${API_URL}/management/load
    ;;
    "flows" ) 
        curl ${CURL_OPTIONS} -X GET ${API_URL}/management/flows
    ;;
    "triggers" ) 
        FLOW_NAME=${ARGS[1]}
        ENDPOINT_NAME=${ARGS[2]}
        curl ${CURL_OPTIONS} -X GET ${API_URL}/management/triggers/${FLOW_NAME}/${ENDPOINT_NAME}
    ;;
    "help" ) 
        echo "kuda-cli: Management for Kuda control plane."
        echo "usage:"
        echo "    kuda-cli deploy"
        echo "    kuda-cli flows"
        echo "    kuda-cli triggers {flow_name} {endpoint_name}"
    ;;
esac